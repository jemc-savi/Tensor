:: Split the given input tensor into varying-length slices along the given axis.
::
:: The `split_axis` parameter is a rank-0 rensor specifying which axis to split.
:: A negative value is interpreted as counting dimensions from the end.
::
:: The size of each slice is given by the `slice_sizes` parameter, a rank-1
:: tensor whose sum must equal the size of the dimension being split.
:: If -1 is found in `slice_sizes`, it is interpreted as "all remaining size".
::
:: The number of elements in the `slice_sizes` tensor must match the value of
:: the `slice_sizes_count` parameter.
::
:: The `slice_sizes_count` parameter also determines the number of outputs of
:: this operation, which will be accessible via the `output_slice` method.
:struct box Tensor.Op.SplitV
  :is Tensor.Op

  :: Get (by index) one of the slices emitted by this operation.
  :fun output_slice(index): @op.output(index)

  :fun non new(graph Tensor.Graph, name
    input
    split_axis
    slice_sizes
    slice_sizes_count USize
  )
    @_new(graph.new_operation("SplitV", name) -> (builder |
      builder
        .add_input(input)
        .add_input(slice_sizes)
        .add_input(split_axis)
        .set_attr_i64("num_split", slice_sizes_count.i64)
        .finish
    ))
