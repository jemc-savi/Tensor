:trait box Tensor.Graph.CanOutput
  :fun output Tensor.Graph.Output
  :fun name String
  :fun shape Tensor.Shape: @output.shape

:struct box Tensor.Graph.Output
  :let op Tensor.Graph.Operation
  :let index USize
  :new box (@op, @index)

  :is Tensor.Graph.CanOutput
  :fun output: @

  :fun name: "\(@op.name).outputs[\(@index)]"
  // :fun type: try (@_to_ffi!.type | 0) // TODO: is this okay?

  :fun shape
    ffi = try (@_to_ffi! | return Tensor.Shape.unknown)

    // We don't bother checking the status here because we know that the
    // operation comes from the given graph, and thus it cannot error here.
    status_ptr = CPointer(_FFI.Status).null

    rank = try (
      _FFI.Output._get_rank(@op.graph._ptr, ffi, status_ptr).usize!
    |
      return Tensor.Shape.unknown
    )

    shape = Array(I64).new(rank)
    while (shape.size < rank) (shape << I64.zero)
    // TODO: make the above process more efficient - use the
    // `resize_possibly_including_uninitialized_memory` method on `Bytes`
    // for inspiration, but generalize to `Array`.

    _FFI.Output._get_shape(
      @op.graph._ptr, ffi, shape.cpointer, rank.i32, status_ptr
    )

    Tensor.Shape.new(shape)

  :fun hash USize: @op._ptr.address.hash.bit_xor(@index.hash)
  :fun "=="(that @'box) Bool
    @op._ptr.address == that.op._ptr.address
    && @index == that.index

  :fun _to_ffi!
    error! if @op._ptr.is_null
    _FFI.Output._new(@op._ptr, @index.i32)

  :fun non _from_ffi_in_graph(graph, ffi _FFI.Output)
    @new(
      Tensor.Graph.Operation._new_with_unknown_name(graph, ffi._op_ptr)
      ffi._index.usize
    )

:struct box _FFI.Output
  :let _op_ptr CPointer(_FFI.Operation)
  :let _index I32
  :new box _new(@_op_ptr, @_index)

  :: Use this variant when passing into an FFI function that will fill
  :: the values here. You shouldn't leave this in a null state.
  :new _new_temporarily_null
    @_op_ptr = CPointer(_FFI.Operation).null
    @_index = 0

  :fun type: @_get_type(@)
  :ffi _get_type(output @'box) I32
    :foreign_name TF_OperationOutputType

  :ffi _get_rank(
    graph CPointer(_FFI.Graph)
    output @'box
    status CPointer(_FFI.Status)
  ) I32
    :foreign_name TF_GraphGetTensorNumDims

  :ffi _get_shape(
    graph CPointer(_FFI.Graph)
    output @'box
    shape_buffer CPointer(I64)
    rank I32
    status CPointer(_FFI.Status)
  ) None
    :foreign_name TF_GraphGetTensorShape
