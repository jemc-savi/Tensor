:class box Tensor.Graph.Operation
  :fun non _ffi: _FFI.Operation
  :let _ptr CPointer(_FFI.Operation)
  :let graph Tensor.Graph
  :let name String

  // No need for a finalizer - memory for this `_ptr` is owned by `graph._ptr`

  :fun input(index): Tensor.Graph.Input.new(@, index) // TODO: partial?
  :fun output(index): Tensor.Graph.Output.new(@, index) // TODO: partial?
  :fun output_count: @_ffi.get_num_outputs(@_ptr).usize

  :new box _new(@graph, @name, @_ptr)

  :fun non _new_with_unknown_name(graph, ptr) @'box
    name_ptr = @_ffi.get_name(ptr)
    name_len = _FFI.strlen(name_ptr).usize
    name = String.val_from_cpointer(name_ptr, name_len, name_len)
    @_new(graph, name, ptr)

:class Tensor.Graph.Operation.Builder
  :fun non _ffi: _FFI.Operation.Builder
  :var _ptr: CPointer(_FFI.Operation.Builder).null
  :let graph Tensor.Graph
  :let _name String

  // No need for a finalizer - memory for this `_ptr` is owned by `graph._ptr`

  // This constructor is private so that only Graph can initiate it,
  // that yields the builder to the caller in a controlled way.
  :new _new(@graph, op_type String, @_name)
    @_ptr = @_ffi.new(@graph._ptr, op_type.cstring, @_name.cstring)

  :fun ref add_input(can_output Tensor.Graph.CanOutput)
    return @ if @_ptr.is_null
    @_ffi.add_input(@_ptr, can_output.output._to_ffi)
    @

  :fun ref add_input_list(can_outputs Array(Tensor.Graph.CanOutput)'box)
    return @ if @_ptr.is_null
    outputs = Array(_FFI.Output).new(can_outputs.size)
    can_outputs.each -> (can_output | outputs << can_output.output._to_ffi)
    @_ffi.add_input_list(@_ptr, outputs.cpointer, outputs.size.i32)
    @

  :fun ref set_attr_bool(attr_name String, value Bool)
    return @ if @_ptr.is_null
    @_ffi.set_attr_bool(
      @_ptr
      attr_name.cstring
      value.u8
    )
    @

  :fun ref set_attr_i64(attr_name String, value I64)
    return @ if @_ptr.is_null
    @_ffi.set_attr_i64(
      @_ptr
      attr_name.cstring
      value
    )
    @

  :fun ref set_attr_type(attr_name String, type_code I32)
    return @ if @_ptr.is_null
    @_ffi.set_attr_type(
      @_ptr
      attr_name.cstring
      type_code
    )
    @

  :fun ref set_attr_shape(attr_name String, dimensions Array(USize))
    return @ if @_ptr.is_null

    dimensions_i64_ptr =
      if (USize.byte_width == I64.byte_width) (
        _FFI.Cast(CPointer(USize), CPointer(I64)).pointer(dimensions.cpointer)
      |
        dimensions_i64 Array(I64) = []
        dimensions.each -> (size | dimensions_i64 << size.i64)
        dimensions_i64.cpointer
      )

    @_ffi.set_attr_shape(
      @_ptr
      attr_name.cstring
      dimensions_i64_ptr
      dimensions.size.i32
    )
    @

  :fun ref set_attr_tensor!(attr_name String, value Tensor.Any) // TODO: what is the right cap for Tensor?
    return @ if @_ptr.is_null
    @_ffi.set_attr_tensor(
      @_ptr
      attr_name.cstring
      value._ptr
      @graph._status_ptr
    )
    @graph._check_status!
    @

  :fun ref finish!
    operation_ptr = @_ffi.finish(@_ptr, @graph._status_ptr)
    @_ptr = @_ptr.null
    @graph._check_status!
    Tensor.Graph.Operation._new(@graph, @_name, operation_ptr)


:module _FFI.Operation
  :ffi get_name(ptr CPointer(@)) CPointer(U8)'ref // TODO: CPointer(U8)'val
    :foreign_name TF_OperationName

  :ffi get_num_outputs(ptr CPointer(@)) I32
    :foreign_name TF_OperationNumOutputs

:module _FFI.Operation.Builder
  :ffi new(
    graph CPointer(_FFI.Graph)
    op_type CPointer(U8)
    oper_name CPointer(U8)
  ) CPointer(@)
    :foreign_name TF_NewOperation

  :ffi finish(
    ptr CPointer(@)
    status_ptr CPointer(_FFI.Status)
  ) CPointer(_FFI.Operation)
    :foreign_name TF_FinishOperation

  :ffi add_input(
    ptr CPointer(@)
    from_output _FFI.Output
  ) None
    :foreign_name TF_AddInput

  :ffi add_input_list(
    ptr CPointer(@)
    from_outputs CPointer(_FFI.Output)
    from_outputs_count I32
  ) None
    :foreign_name TF_AddInputList

  // :ffi add_output(
  //   ptr CPointer(@)
  //   input _FFI.Output
  // ) None
  //   :foreign_name TF_AddOutput

  :ffi set_attr_bool(
    ptr CPointer(@)
    attr_name CPointer(U8)
    value U8
  ) None
    :foreign_name TF_SetAttrBool

  :ffi set_attr_i64(
    ptr CPointer(@)
    attr_name CPointer(U8)
    value I64
  ) None
    :foreign_name TF_SetAttrInt

  :ffi set_attr_type(
    ptr CPointer(@)
    attr_name CPointer(U8)
    value I32
  ) None
    :foreign_name TF_SetAttrType

  :ffi set_attr_shape(
    ptr CPointer(@)
    attr_name CPointer(U8)
    dimension_list CPointer(I64)
    dimension_count I32
  ) None
    :foreign_name TF_SetAttrShape

  :ffi set_attr_tensor(
    ptr CPointer(@)
    attr_name CPointer(U8)
    value CPointer(_FFI.Tensor)
    status_ptr CPointer(_FFI.Status)
  ) None
    :foreign_name TF_SetAttrTensor
