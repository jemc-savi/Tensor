:class Tensor.Op.Add.Spec
  :is Spec
  :const describes: "Tensor.Op.Add"

  :it "computes arithmetic addition"
    _WithGraphHelper.run(@env) -> (g, session | assert no_error: (
      result = session.compute!(
        g.add("example"
          g.const("x", Tensor(I32).from_array([1, 2, 3, 4]))
          g.const("y", Tensor(I32).from_array([5, 6, 7, 8]))
        )
      )

      assert: result.as!(Tensor(I32)).into_array == [6, 8, 10, 12]
    ))

  :it "can broadcast smaller sizes/shapes across larger sizes/shapes"
    _WithGraphHelper.run(@env) -> (g, session | assert no_error: (
      result = session.compute!(
        g.add("example"
          g.const("x", Tensor(I32).from_array([-1, -3, -5]))
          g.const("y", Tensor(I32).from_array([
            1, 2, 3
            4, 5, 6
            7, 8, 9
          ]).try_reshape(Tensor.Shape.new([3, 3])))
        )
      )

      assert: result.as!(Tensor(I32)).into_array == [
        0, -1, -2
        3,  2,  1
        6,  5,  4
      ]
    ))
